{"version":3,"sources":["components/Header/SearchBox/SearchBox.module.css","components/Header/OtherLinks/Link/Link.module.css","components/Header/OtherLinks/OtherLinks.module.css","components/Header/Header.module.css","assets/images/logo.png","components/Header/Logo/Logo.module.css","components/MovieBox/MovieBox.module.css","components/MovieBox/MoviePoster/MoviePoster.module.css","hoc/ReactAux.js","components/Header/SearchBox/SearchBox.js","components/Header/OtherLinks/Link/Link.js","components/Header/OtherLinks/OtherLinks.js","components/Header/Logo/Logo.js","components/Header/Header.js","components/MovieBox/MoviePoster/MoviePoster.js","components/MovieBox/MovieBox.js","containers/MovieSearch/MovieSearch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","searchBox","className","classes","SearchBar","type","SearchInput","placeholder","SearchButton","icon","faSearch","link","Link","LinkText","otherLinks","OtherLinks","logo","Logo","style","height","src","movieLogo","alt","header","Header","SearchBox","moviePoster","MoviePoster","MovieBox","Component","MovieSearch","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,YAAc,+BAA+B,aAAe,kC,sBCAvHD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,WAAa,iC,gBCA/BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCD3BD,EAAOC,QAAU,IAA0B,kC,gBCC3CD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,YAAc,mC,gLCCjBC,EAFL,SAACC,GAAD,OAASA,EAAMC,U,gCCgBVC,EAXC,SAACF,GACf,OACE,yBAAKG,UAAWC,IAAQC,WACxB,2BAAOC,KAAK,OAAOH,UAAWC,IAAQG,YAAaC,YAAY,kBAC/D,4BAAQL,UAAWC,IAAQK,cAC3B,kBAAC,IAAD,CAAiBC,KAAMC,S,iBCDZC,EANJ,SAACZ,GACV,OACE,uBAAGG,UAAWC,IAAQS,MAAQb,EAAMc,W,iBCQzBC,EATE,SAACf,GAChB,OACE,yBAAKG,UAAWC,IAAQY,YACxB,kBAACH,EAAD,CAAMC,SAAS,aACf,kBAACD,EAAD,CAAMC,SAAS,e,mDCEJG,EANJ,SAACjB,GAAD,OACT,yBAAKG,UAAWC,IAAQc,KAAMC,MAAO,CAACC,OAAOpB,EAAMoB,SACnD,yBAAKC,IAAKC,IAAWC,IAAI,kBCUZC,EAVF,SAACxB,GACZ,OACE,yBAAKG,UAAWC,IAAQqB,QACxB,kBAACP,EAAD,MACA,kBAACQ,EAAD,MACA,kBAACV,EAAD,Q,kCCDWW,EAPG,SAAC3B,GACjB,OACE,yBAAKG,UAAWC,IAAQwB,aACxB,yBAAKP,IAAI,wEAAwEE,IAAI,iBCQ1EM,E,iLARX,OACE,yBAAK1B,UAAWC,IAAQyB,UACxB,kBAACD,EAAD,W,GAJiBE,aCYRC,E,iLATX,OACE,kBAAC,EAAD,KACA,kBAACN,EAAD,MACA,kBAAC,EAAD,W,GALoBK,aCOXE,E,iLANX,OACE,kBAAC,EAAD,U,GAJYF,aCSEG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.9bc06b2c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"SearchBox_SearchBar__3-VT7\",\"SearchInput\":\"SearchBox_SearchInput__3dEPf\",\"SearchButton\":\"SearchBox_SearchButton__UlifO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Link\":\"Link_Link__Z2NCW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OtherLinks\":\"OtherLinks_OtherLinks__2JLNE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__WnRlD\"};","module.exports = __webpack_public_path__ + \"static/media/logo.b4116fb0.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2sbhd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieBox\":\"MovieBox_MovieBox__JXJFY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MoviePoster\":\"MoviePoster_MoviePoster__1Mb7j\"};","const aux=(props)=>props.children;\r\n\r\nexport default aux;\r\n","import React from 'react';\r\nimport classes from './SearchBox.module.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst searchBox=(props)=>{\r\n  return(\r\n    <div className={classes.SearchBar}>\r\n    <input type='text' className={classes.SearchInput} placeholder='Search Movies'/>\r\n    <button className={classes.SearchButton}>\r\n    <FontAwesomeIcon icon={faSearch} />\r\n    </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default searchBox;\r\n","import React from 'react';\r\nimport classes from './Link.module.css';\r\n\r\nconst link=(props)=>{\r\n  return(\r\n    <p className={classes.Link} >{props.LinkText}</p>\r\n  );\r\n}\r\n\r\nexport default link;\r\n","import React from 'react';\r\nimport Link from './Link/Link';\r\nimport classes from './OtherLinks.module.css';\r\n\r\nconst otherLinks=(props)=>{\r\n  return(\r\n    <div className={classes.OtherLinks}>\r\n    <Link LinkText=\"IMDB Top\"/>\r\n    <Link LinkText=\"2019 Top\"/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default otherLinks;\r\n","import React from 'react';\r\nimport movieLogo from '../../../assets/images/logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo=(props)=>(\r\n  <div className={classes.Logo} style={{height:props.height}}>\r\n  <img src={movieLogo} alt=\"MovieMagnet\" />\r\n  </div>\r\n);\r\n\r\nexport default logo;\r\n","import React from 'react';\r\nimport SearchBox from './SearchBox/SearchBox';\r\nimport OtherLinks from './OtherLinks/OtherLinks';\r\nimport classes from './Header.module.css';\r\nimport  Logo from './Logo/Logo';\r\n\r\nconst header=(props)=>{\r\n  return(\r\n    <div className={classes.Header} >\r\n    <Logo/>\r\n    <SearchBox/>\r\n    <OtherLinks/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default header;\r\n","import React from 'react';\r\nimport classes from './MoviePoster.module.css';\r\n\r\nconst moviePoster=(props)=>{\r\n  return(\r\n    <div className={classes.MoviePoster}>\r\n    <img src=\"https://images-na.ssl-images-amazon.com/images/I/41zN6HGkL1L._AC_.jpg\" alt=\"movie name\"/>\r\n    </div>\r\n  );\r\n}\r\nexport default moviePoster;\r\n","import React,{Component} from 'react';\r\nimport classes from './MovieBox.module.css';\r\nimport MoviePoster from './MoviePoster/MoviePoster';\r\n\r\nclass MovieBox extends Component{\r\n  render(){\r\n    return(\r\n      <div className={classes.MovieBox}>\r\n      <MoviePoster/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieBox;\r\n","import React,{Component} from 'react';\r\nimport Aux from '../../hoc/ReactAux';\r\nimport Header from '../../components/Header/Header';\r\nimport MovieBox from '../../components/MovieBox/MovieBox';\r\n\r\nclass MovieSearch extends Component{\r\n  render(){\r\n    return(\r\n      <Aux>\r\n      <Header/>\r\n      <MovieBox/>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieSearch;\r\n","import React,{Component} from 'react';\nimport MovieSearch from './containers/MovieSearch/MovieSearch';\n\nclass App extends Component {\n\n  render(){\n    return (\n      <MovieSearch/>\n    );\n  }\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}